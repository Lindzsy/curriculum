Banking homework
The problems are graduated; each one builds on the previous one.  
Don't move on to the next step until the previous step works,
and you are satisfied that you understand why it works the way it does.

Joe has a bank account containing $250
Sally has a bank account containing $4,000

Step 1:  Write a Ruby program to add money to Sally's bank account:
a.  output the beginning balance in Sally's account
b.  add $200 to the balance
c.  output the updated balance

Step 2:  Write a Ruby program to add money to Sally's bank account:
a.  output the beginning balance in Sally's account
b.  read in an amount from the user at the keyboard and add it to the balance
c.  output the updated balance
d.  What if the user types in hotdog for the amount to be added?  Make the program handle this gracefully.

Step 3:  Implement the bank accounts as key/value pairs (hashes) 
containing the account holder's name and the amount in the account.  Create an array of hashes 
and add a few more accounts to your liking (e.g. Wanda, $2)
Write a Ruby program to mimic a teller:
a.  read in the account holder's name
b.  output account holder's name and the beginning balance in the account 
c.  read in an amount to be deposited
d.  output account holder's name and the updated balance

